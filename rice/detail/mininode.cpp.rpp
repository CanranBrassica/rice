// TODO: This is silly, autoconf...
#undef PACKAGE_NAME
#undef PACKAGE_STRING
#undef PACKAGE_TARNAME
#undef PACKAGE_VERSION

#include "../config.hpp"

// TODO: This is silly, autoconf...
#undef PACKAGE_NAME
#undef PACKAGE_STRING
#undef PACKAGE_TARNAME
#undef PACKAGE_VERSION

#if !defined(HAVE_NODE_H) && !defined(REALLY_HAVE_RUBY_NODE_H)

#include "mininode.hpp"
#include <cstring>

extern "C"
char const * ruby_node_name(int node);

namespace
{

int node_value(char const * name)
{
  /* TODO: any way to end the block? */
  int j;
  for(j = 0; ; ++j)
  {
    if(!std::strcmp(name, ruby_node_name(j)))
    {
      return j;
    }
  }
}

} // namespace

#ruby <<END
require 'node_names'
NODE_NAMES.each do |name|
  puts <<-END
static int NODE_#{name}_ = -1;

int Rice::detail::Mininode::get_NODE_#{name}()
{
  if(NODE_#{name}_ == -1)
  {
    NODE_#{name}_ = node_value("NODE_#{name}");
  }

  return NODE_#{name}_;
}
  END
end
nil
END

#endif

